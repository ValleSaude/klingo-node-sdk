{"version":3,"sources":["../../src/resources/patient.js"],"names":["config","require","Api","Patient","client","options","api","headers","Authorization","authentication","token_type","access_token","endpoint","base","patient","get","response","data","body","put","healthInsurance","module","exports"],"mappings":";;;;;;;;;;;;;;;;;;AAAA,IAAMA,MAAM,GAAGC,OAAO,CAAC,WAAD,CAAtB;;AACA,eAAcA,OAAO,CAAC,YAAD,CAArB;AAAA,IAAOC,GAAP,YAAOA,GAAP;;IAEMC,O;AACJ,mBAAYC,MAAZ,EAAoBC,OAApB,EAA6B;AAAA;AAC3B,SAAKD,MAAL,GAAcA,MAAd;AACA,SAAKC,OAAL,GAAeA,OAAf;AACA,SAAKC,GAAL,GAAW,IAAIJ,GAAJ,EAAX;AACD;;;;;+FAED;AAAA;AAAA;AAAA;AAAA;AAAA;AACQK,gBAAAA,OADR,mCAEO,KAAKF,OAAL,CAAaE,OAFpB;AAGIC,kBAAAA,aAAa,YAAK,KAAKH,OAAL,CAAaI,cAAb,CAA4BC,UAAjC,cAA+C,KAAKL,OAAL,CAAaI,cAAb,CAA4BE,YAA3E;AAHjB;AAKQC,gBAAAA,QALR,aAKsB,KAAKP,OAAL,CAAaQ,IAAb,WALtB,cAKmDb,MAAM,CAACc,OAAP,CAAeC,GALlE;AAAA;AAAA,uBAMyB,KAAKT,GAAL,CAASS,GAAT,CAAaH,QAAb,EAAuB;AAAEL,kBAAAA,OAAO,EAAPA;AAAF,iBAAvB,CANzB;;AAAA;AAMQS,gBAAAA,QANR;AAAA,iDAOSA,QAAQ,CAACC,IAPlB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;;;;kGAUA,kBAAaC,IAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AACQX,gBAAAA,OADR,mCAEO,KAAKF,OAAL,CAAaE,OAFpB;AAGIC,kBAAAA,aAAa,YAAK,KAAKH,OAAL,CAAaI,cAAb,CAA4BC,UAAjC,cAA+C,KAAKL,OAAL,CAAaI,cAAb,CAA4BE,YAA3E;AAHjB;AAAA;AAAA,uBAKyB,KAAKL,GAAL,CAASa,GAAT,WAClB,KAAKd,OAAL,CAAaQ,IAAb,WADkB,cACWb,MAAM,CAACc,OAAP,CAAeC,GAD1B,GAErBG,IAFqB,EAGrB;AAAEX,kBAAAA,OAAO,EAAPA;AAAF,iBAHqB,CALzB;;AAAA;AAKQS,gBAAAA,QALR;AAAA,kDAUSA,QAAQ,CAACC,IAVlB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;;;;+GAaA;AAAA;AAAA;AAAA;AAAA;AAAA;AACQV,gBAAAA,OADR,mCAEO,KAAKF,OAAL,CAAaE,OAFpB;AAGIC,kBAAAA,aAAa,YAAK,KAAKH,OAAL,CAAaI,cAAb,CAA4BC,UAAjC,cAA+C,KAAKL,OAAL,CAAaI,cAAb,CAA4BE,YAA3E;AAHjB;AAKQC,gBAAAA,QALR,aAKsB,KAAKP,OAAL,CAAaQ,IAAb,WALtB,cAKmDb,MAAM,CAACc,OAAP,CAAeM,eALlE;AAAA;AAAA,uBAMyB,KAAKd,GAAL,CAASS,GAAT,CAAaH,QAAb,EAAuB;AAAEL,kBAAAA,OAAO,EAAPA;AAAF,iBAAvB,CANzB;;AAAA;AAMQS,gBAAAA,QANR;AAAA,kDAOSA,QAAQ,CAACC,IAPlB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;;;;;AAWFI,MAAM,CAACC,OAAP,GAAiB;AAAEnB,EAAAA,OAAO,EAAPA;AAAF,CAAjB","sourcesContent":["const config = require('../config');\r\nconst {Api} = require('../api/api');\r\n\r\nclass Patient {\r\n  constructor(client, options) {\r\n    this.client = client;\r\n    this.options = options;\r\n    this.api = new Api();\r\n  }\r\n\r\n  async get() {\r\n    const headers = {\r\n      ...this.options.headers,\r\n      Authorization: `${this.options.authentication.token_type} ${this.options.authentication.access_token}`\r\n    };\r\n    const endpoint = `${this.options.base.default}/${config.patient.get}`;\r\n    const response = await this.api.get(endpoint, { headers });\r\n    return response.data;\r\n  }\r\n\r\n  async update(body) {\r\n    const headers = {\r\n      ...this.options.headers,\r\n      Authorization: `${this.options.authentication.token_type} ${this.options.authentication.access_token}`\r\n    };\r\n    const response = await this.api.put(\r\n      `${this.options.base.default}/${config.patient.get}`,\r\n      body,\r\n      { headers }\r\n    );\r\n    return response.data;\r\n  }\r\n\r\n  async listHealthInsurance() {\r\n    const headers = {\r\n      ...this.options.headers,\r\n      Authorization: `${this.options.authentication.token_type} ${this.options.authentication.access_token}`\r\n    };\r\n    const endpoint = `${this.options.base.default}/${config.patient.healthInsurance}`;\r\n    const response = await this.api.get(endpoint, { headers });\r\n    return response.data;\r\n  }\r\n}\r\n\r\nmodule.exports = { Patient };\r\n"],"file":"patient.js"}