{"version":3,"sources":["../../src/resources/patient.js"],"names":["axios","require","config","Patient","client","options","headers","Authorization","authentication","token_type","access_token","endpoint","base","patient","get","response","data","body","put","healthInsurance","module","exports"],"mappings":";;;;;;;;;;;;;;;;;;AAAA,IAAMA,KAAK,GAAGC,OAAO,CAAC,OAAD,CAAP,WAAd;;AACA,IAAMC,MAAM,GAAGD,OAAO,CAAC,WAAD,CAAtB;;IAEME,O;AACJ,mBAAYC,MAAZ,EAAoBC,OAApB,EAA6B;AAAA;AAC3B,SAAKD,MAAL,GAAcA,MAAd;AACA,SAAKC,OAAL,GAAeA,OAAf;AACD;;;;;+FAED;AAAA;AAAA;AAAA;AAAA;AAAA;AACQC,gBAAAA,OADR,mCAEO,KAAKD,OAAL,CAAaC,OAFpB;AAGIC,kBAAAA,aAAa,YAAK,KAAKF,OAAL,CAAaG,cAAb,CAA4BC,UAAjC,cAA+C,KAAKJ,OAAL,CAAaG,cAAb,CAA4BE,YAA3E;AAHjB;AAKQC,gBAAAA,QALR,aAKsB,KAAKN,OAAL,CAAaO,IAAb,WALtB,cAKmDV,MAAM,CAACW,OAAP,CAAeC,GALlE;AAAA;AAAA,uBAMyBd,KAAK,CAACc,GAAN,CAAUH,QAAV,EAAoB;AAAEL,kBAAAA,OAAO,EAAPA;AAAF,iBAApB,CANzB;;AAAA;AAMQS,gBAAAA,QANR;AAAA,iDAOSA,QAAQ,CAACC,IAPlB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;;;;kGAUA,kBAAaC,IAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AACQX,gBAAAA,OADR,mCAEO,KAAKD,OAAL,CAAaC,OAFpB;AAGIC,kBAAAA,aAAa,YAAK,KAAKF,OAAL,CAAaG,cAAb,CAA4BC,UAAjC,cAA+C,KAAKJ,OAAL,CAAaG,cAAb,CAA4BE,YAA3E;AAHjB;AAAA;AAAA,uBAKyBV,KAAK,CAACkB,GAAN,WAClB,KAAKb,OAAL,CAAaO,IAAb,WADkB,cACWV,MAAM,CAACW,OAAP,CAAeC,GAD1B,GAErBG,IAFqB,EAGrB;AAAEX,kBAAAA,OAAO,EAAPA;AAAF,iBAHqB,CALzB;;AAAA;AAKQS,gBAAAA,QALR;AAAA,kDAUSA,QAAQ,CAACC,IAVlB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;;;;+GAaA;AAAA;AAAA;AAAA;AAAA;AAAA;AACQV,gBAAAA,OADR,mCAEO,KAAKD,OAAL,CAAaC,OAFpB;AAGIC,kBAAAA,aAAa,YAAK,KAAKF,OAAL,CAAaG,cAAb,CAA4BC,UAAjC,cAA+C,KAAKJ,OAAL,CAAaG,cAAb,CAA4BE,YAA3E;AAHjB;AAKQC,gBAAAA,QALR,aAKsB,KAAKN,OAAL,CAAaO,IAAb,WALtB,cAKmDV,MAAM,CAACW,OAAP,CAAeM,eALlE;AAAA;AAAA,uBAMyBnB,KAAK,CAACc,GAAN,CAAUH,QAAV,EAAoB;AAAEL,kBAAAA,OAAO,EAAPA;AAAF,iBAApB,CANzB;;AAAA;AAMQS,gBAAAA,QANR;AAAA,kDAOSA,QAAQ,CAACC,IAPlB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;;;;;AAWFI,MAAM,CAACC,OAAP,GAAiB;AAAElB,EAAAA,OAAO,EAAPA;AAAF,CAAjB","sourcesContent":["const axios = require('axios').default;\nconst config = require('../config');\n\nclass Patient {\n  constructor(client, options) {\n    this.client = client;\n    this.options = options;\n  }\n\n  async get() {\n    const headers = {\n      ...this.options.headers,\n      Authorization: `${this.options.authentication.token_type} ${this.options.authentication.access_token}`\n    };\n    const endpoint = `${this.options.base.default}/${config.patient.get}`;\n    const response = await axios.get(endpoint, { headers });\n    return response.data;\n  }\n\n  async update(body) {\n    const headers = {\n      ...this.options.headers,\n      Authorization: `${this.options.authentication.token_type} ${this.options.authentication.access_token}`\n    };\n    const response = await axios.put(\n      `${this.options.base.default}/${config.patient.get}`,\n      body,\n      { headers }\n    );\n    return response.data;\n  }\n\n  async listHealthInsurance() {\n    const headers = {\n      ...this.options.headers,\n      Authorization: `${this.options.authentication.token_type} ${this.options.authentication.access_token}`\n    };\n    const endpoint = `${this.options.base.default}/${config.patient.healthInsurance}`;\n    const response = await axios.get(endpoint, { headers });\n    return response.data;\n  }\n}\n\nmodule.exports = { Patient };\n"],"file":"patient.js"}