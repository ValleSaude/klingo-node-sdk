{
    "swagger" : "2.0",
    "info" : {
      "description" : "Klingo API externa",
      "version" : "1.0.0",
      "title" : "Klingo API Externa",
      "termsOfService" : "http://swagger.io/terms/",
      "contact" : {
        "email" : "suporte@klingo.com.br"
      },
      "license" : {
        "name" : "Apache 2.0",
        "url" : "http://www.apache.org/licenses/LICENSE-2.0.html"
      }
    },
    "tags" : [ {
      "name" : "teste",
      "description" : "Teste da API."
    }, {
      "name" : "sessao",
      "description" : "Autenticação do usuário."
    }, {
      "name" : "cadastros",
      "description" : "Obtenção de dados cadastrais."
    }, {
      "name" : "paciente",
      "description" : "Integração do cadastro de paciente."
    }, {
      "name" : "agenda",
      "description" : "Funções da agenda."
    }, {
      "name" : "voucher",
      "description" : "Gestão das agendas marcadas"
    } ],
    "schemes" : [ "https" ],
    "paths" : {
      "/live" : {
        "get" : {
          "tags" : [ "teste" ],
          "summary" : "Verifica se a API está no ar.",
          "description" : "Verifica se a API está no ar e exibe a versão.",
          "operationId" : "versao",
          "responses" : {
            "200" : {
              "description" : "OK"
            },
            "405" : {
              "description" : "Invalid input"
            }
          }
        }
      },
      "/externo/register" : {
        "post" : {
          "tags" : [ "sessao" ],
          "summary" : "Realiza o cadastro do paciente.",
          "description" : "Cadastro do Paciente",
          "operationId" : "register",
          "consumes" : [ "application/json" ],
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "in" : "header",
            "name" : "X-APP-TOKEN",
            "required" : true,
            "type" : "string"
          }, {
            "in" : "body",
            "name" : "body",
            "description" : "Dados do Paciente.",
            "required" : true,
            "schema" : {
              "type" : "object",
              "properties" : {
                "login" : {
                  "type" : "string"
                },
                "senha" : {
                  "type" : "string"
                },
                "paciente" : {
                  "$ref" : "#/definitions/paciente"
                }
              }
            }
          } ],
          "responses" : {
            "200" : {
              "description" : "Id do paciente criado.",
              "schema" : {
                "type" : "object",
                "properties" : {
                  "id" : {
                    "type" : "number",
                    "example" : "123",
                    "description" : "Id do novo paciente registrado."
                  }
                }
              }
            },
            "403" : {
              "description" : "dados inválidos."
            },
            "405" : {
              "description" : "Invalid input"
            }
          }
        }
      },
      "/externo/login" : {
        "post" : {
          "tags" : [ "sessao" ],
          "summary" : "Realiza a autenticação da aplicação, identificando o paciente.",
          "description" : "Autenticação da Aplicação.",
          "operationId" : "login",
          "consumes" : [ "application/json" ],
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "in" : "header",
            "name" : "X-APP-TOKEN",
            "required" : true,
            "type" : "string",
            "description" : "Token de integração."
          }, {
            "in" : "body",
            "name" : "body",
            "description" : "Dados para Autenticação.",
            "required" : true,
            "schema" : {
              "$ref" : "#/definitions/credencialLogin"
            }
          } ],
          "responses" : {
            "200" : {
              "description" : "Token da autenticação que deve ser enviado no header dos demais endpoints.",
              "schema" : {
                "$ref" : "#/definitions/sessao"
              }
            },
            "403" : {
              "description" : "dados inválidos."
            },
            "405" : {
              "description" : "Invalid input"
            }
          }
        }
      },
      "/paciente" : {
        "put" : {
          "tags" : [ "paciente" ],
          "summary" : "Atualização dos dados do paciente",
          "description" : "Realiza a atualização dos dados do paciente",
          "operationId" : "updatePac",
          "consumes" : [ "application/json" ],
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "in" : "header",
            "name" : "Authorization",
            "type" : "string",
            "required" : true
          }, {
            "in" : "body",
            "name" : "body",
            "description" : "Dados do paciente.",
            "required" : true,
            "schema" : {
              "$ref" : "#/definitions/paciente"
            }
          } ],
          "responses" : {
            "200" : {
              "description" : "requisição executada com sucesso.",
              "schema" : {
                "$ref" : "#/definitions/paciente"
              }
            },
            "403" : {
              "description" : "credenciais inválidas."
            },
            "405" : {
              "description" : "Invalid input"
            }
          }
        },
        "get" : {
          "tags" : [ "paciente" ],
          "summary" : "Obter dados do paciente",
          "description" : "Realiza a consulta do paciente",
          "operationId" : "getPac",
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "in" : "header",
            "name" : "Authorization",
            "type" : "string",
            "required" : true
          } ],
          "responses" : {
            "200" : {
              "description" : "requisição executada com sucesso.",
              "schema" : {
                "$ref" : "#/definitions/paciente"
              }
            },
            "403" : {
              "description" : "credenciais inválidas."
            },
            "405" : {
              "description" : "Invalid input"
            }
          }
        }
      },
      "/vouchers" : {
        "get" : {
          "tags" : [ "voucher" ],
          "summary" : "Obter os vouchers do paciente (agendamentos)",
          "description" : "Realiza a consulta de agendamentos.",
          "operationId" : "getVouchers",
          "consumes" : [ "application/json" ],
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "in" : "header",
            "name" : "Authorization",
            "type" : "string",
            "required" : true
          } ],
          "responses" : {
            "200" : {
              "description" : "requisição executada com sucesso.",
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/definitions/voucher"
                }
              }
            },
            "405" : {
              "description" : "Invalid input"
            }
          }
        }
      },
      "/voucher" : {
        "delete" : {
          "tags" : [ "voucher" ],
          "summary" : "Exclusão do voucher (agendamento)",
          "description" : "Realiza a exclusão do voucher.",
          "operationId" : "delVoucher",
          "consumes" : [ "application/json" ],
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "in" : "header",
            "name" : "Authorization",
            "type" : "string",
            "required" : true
          }, {
            "in" : "body",
            "name" : "body",
            "description" : "Id do voucher a ser cancelado.",
            "required" : true,
            "schema" : {
              "type" : "object",
              "properties" : {
                "id" : {
                  "type" : "string"
                }
              }
            }
          } ],
          "responses" : {
            "200" : {
              "description" : "requisição executada com sucesso.",
              "schema" : {
                "type" : "string",
                "example" : "Voucher cancelado"
              }
            },
            "405" : {
              "description" : "Invalid input"
            }
          }
        }
      },
      "/requisicao" : {
        "get" : {
          "tags" : [ "voucher" ],
          "summary" : "Obter os dados da requisição de exames do paciente",
          "description" : "Obter dados da requisição de exames do paciente.",
          "operationId" : "getRequisicao",
          "consumes" : [ "application/json" ],
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "in" : "header",
            "name" : "Authorization",
            "type" : "string",
            "required" : true
          }, {
            "in" : "query",
            "name" : "id",
            "description" : "Id da requisição lida no QRCode da requisicão. RQ-ORIGEM-ID-TOKEN",
            "required" : true,
            "type" : "number"
          }, {
            "in" : "query",
            "name" : "origem",
            "description" : "Origem da requisição lida no QRCode da requisicão. RQ-ORIGEM-ID-TOKEN",
            "required" : true,
            "type" : "string"
          }, {
            "in" : "query",
            "name" : "token",
            "description" : "Token da requisição lida no QRCode da requisicão. RQ-ORIGEM-ID-TOKEN",
            "required" : true,
            "type" : "string"
          } ],
          "responses" : {
            "200" : {
              "description" : "requisição executada com sucesso.",
              "schema" : {
                "$ref" : "#/definitions/requisicao"
              }
            },
            "405" : {
              "description" : "Invalid input"
            }
          }
        }
      },
      "/agenda/horarios" : {
        "get" : {
          "tags" : [ "agenda" ],
          "summary" : "consulta dos horários disponíveis para marcação.",
          "description" : "Consulta dos horários disponíveis para marcação.",
          "operationId" : "getTimes",
          "consumes" : [ "application/json" ],
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "in" : "header",
            "name" : "Authorization",
            "type" : "string",
            "required" : true
          }, {
            "in" : "query",
            "name" : "especialidade",
            "description" : "CBOS da especialidade. Obrigatório somente se marcação de consulta.",
            "required" : false,
            "type" : "string"
          }, {
            "in" : "query",
            "name" : "exame",
            "description" : "Código do exame. Obrigatório somente se marcação de exame.",
            "required" : false,
            "type" : "string"
          }, {
            "in" : "query",
            "name" : "inicio",
            "description" : "Data inicial da busca. Se não informado, busca-se a partir da data atual.",
            "required" : false,
            "type" : "string"
          }, {
            "in" : "query",
            "name" : "fim",
            "description" : "Data final da busca. Se não informado, busca-se até 10 dias em relação a data inicial.",
            "required" : false,
            "type" : "string"
          }, {
            "in" : "query",
            "name" : "crm",
            "description" : "Filtra o médico pelo CRM informado. (opcional)",
            "required" : false,
            "type" : "string"
          }, {
            "in" : "query",
            "name" : "cnes",
            "description" : "Filtra o unidade pelo CNES informado. (opcional)",
            "required" : false,
            "type" : "string"
          }, {
            "in" : "query",
            "name" : "plano",
            "description" : "Filtra operadora/plano. (opcional)",
            "required" : false,
            "type" : "string"
          }, {
            "in" : "query",
            "name" : "revisao",
            "description" : "Indica se a consulta é de revisão. (opcional)",
            "required" : false,
            "type" : "string"
          } ],
          "responses" : {
            "200" : {
              "description" : "requisição executada com sucesso.",
              "schema" : {
                "$ref" : "#/definitions/horariosAgenda"
              }
            },
            "403" : {
              "description" : "procedimento não identificado. Vai ocorrer se o procedimento de consulta não for identificado."
            },
            "405" : {
              "description" : "Invalid input"
            }
          }
        }
      },
      "/agenda/horario" : {
        "post" : {
          "tags" : [ "agenda" ],
          "summary" : "confirma a marcação do horário..",
          "description" : "Realiza a marcação do horário na agenda do médico. O solicitante pode ser informado opcionalmente para marcações de exames.",
          "operationId" : "schedule",
          "consumes" : [ "application/json" ],
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "in" : "header",
            "name" : "Authorization",
            "type" : "string",
            "required" : true
          }, {
            "in" : "body",
            "name" : "body",
            "description" : "Dados da marcação.",
            "required" : true,
            "schema" : {
              "$ref" : "#/definitions/horarioMarcar"
            }
          } ],
          "responses" : {
            "200" : {
              "description" : "requisição executada com sucesso.",
              "schema" : {
                "$ref" : "#/definitions/voucher"
              }
            },
            "405" : {
              "description" : "Invalid input"
            }
          }
        }
      },
      "/agenda/reservar" : {
        "post" : {
          "tags" : [ "agenda" ],
          "summary" : "confirma a marcação do horário..",
          "description" : "Realiza a reserva do horário para posterior confirmação da marcação.",
          "operationId" : "reserve",
          "consumes" : [ "application/json" ],
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "in" : "header",
            "name" : "Authorization",
            "type" : "string",
            "required" : true
          }, {
            "in" : "body",
            "name" : "body",
            "description" : "Dados da marcação.",
            "required" : true,
            "schema" : {
              "$ref" : "#/definitions/horarioMarcar"
            }
          } ],
          "responses" : {
            "200" : {
              "description" : "requisição executada com sucesso.",
              "schema" : {
                "$ref" : "#/definitions/reserva"
              }
            },
            "403" : {
              "description" : "Invalid input"
            }
          }
        }
      },
      "/agenda/consultas" : {
        "get" : {
          "tags" : [ "cadastros" ],
          "summary" : "lista os procedimentos de consulta disponíveis na base.",
          "description" : "Lista os procedimentos de consulta.",
          "operationId" : "getConsultas",
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "in" : "header",
            "name" : "Authorization",
            "type" : "string",
            "required" : true
          } ],
          "responses" : {
            "200" : {
              "description" : "lista de consultas.",
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/definitions/procedimento"
                }
              }
            },
            "405" : {
              "description" : "Invalid input"
            }
          }
        }
      },
      "/agenda/especialidades" : {
        "get" : {
          "tags" : [ "cadastros" ],
          "summary" : "lista as especialidades disponíveis na base.",
          "description" : "Lista as especialidades.",
          "operationId" : "getEspecialidades",
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "in" : "header",
            "name" : "Authorization",
            "type" : "string",
            "required" : true
          } ],
          "responses" : {
            "200" : {
              "description" : "lista de especialidades.",
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/definitions/especialidade"
                }
              }
            },
            "405" : {
              "description" : "Invalid input"
            }
          }
        }
      },
      "/agenda/exames" : {
        "get" : {
          "tags" : [ "cadastros" ],
          "summary" : "lista os exames disponíveis na base.",
          "description" : "Lista os exames.",
          "operationId" : "getExames",
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "in" : "header",
            "name" : "Authorization",
            "type" : "string",
            "required" : true
          }, {
            "in" : "query",
            "name" : "id",
            "type" : "number",
            "required" : false
          }, {
            "in" : "query",
            "name" : "busca",
            "type" : "string",
            "required" : false
          } ],
          "responses" : {
            "200" : {
              "description" : "lista de exames.",
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/definitions/procedimento"
                }
              }
            },
            "405" : {
              "description" : "Invalid input"
            }
          }
        }
      },
      "/agenda/profissionais" : {
        "get" : {
          "tags" : [ "cadastros" ],
          "summary" : "lista os profissionais disponíveis para um determinado procedimento.",
          "description" : "Lista os profissionais.",
          "operationId" : "getProfissionais",
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "in" : "header",
            "name" : "Authorization",
            "type" : "string",
            "required" : true
          }, {
            "in" : "query",
            "name" : "id_procedimento",
            "type" : "number",
            "required" : true
          }, {
            "in" : "query",
            "name" : "id_plano",
            "type" : "number",
            "required" : false
          }, {
            "in" : "query",
            "name" : "cnes",
            "type" : "number",
            "required" : false
          } ],
          "responses" : {
            "200" : {
              "description" : "lista de profissionais.",
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/definitions/profissional"
                }
              }
            },
            "405" : {
              "description" : "Invalid input"
            }
          }
        }
      },
      "/checkin" : {
        "post" : {
          "tags" : [ "check-in" ],
          "summary" : "realiza o check-in de atendimento do paciente.",
          "description" : "Realiza o check-in de atendimento do paciente.",
          "operationId" : "checkIn",
          "consumes" : [ "application/json" ],
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "in" : "header",
            "name" : "Authorization",
            "type" : "string",
            "required" : true
          }, {
            "in" : "body",
            "name" : "body",
            "description" : "Parâmetros para o checkin.",
            "required" : true,
            "schema" : {
              "type" : "object",
              "properties" : {
                "id" : {
                  "type" : "number",
                  "example" : 123,
                  "description" : "Id do voucher"
                },
                "expresso" : {
                  "type" : "boolean",
                  "example" : false,
                  "description" : "Indica se deve ser realizado check-in expresso para o atendimento."
                },
                "preferencial" : {
                  "type" : "boolean",
                  "example" : false,
                  "description" : "Indica se é atendimento preferencial. Parâmetro opcional."
                }
              }
            }
          } ],
          "responses" : {
            "200" : {
              "description" : "requisição executada com sucesso.",
              "schema" : {
                "$ref" : "#/definitions/checkinrealizado"
              }
            },
            "405" : {
              "description" : "Dados inválidos"
            }
          }
        },
        "delete" : {
          "tags" : [ "check-in" ],
          "summary" : "realiza o cancelamento do check-in de atendimento do paciente.",
          "description" : "Realiza o cancelamento do check-in de atendimento do paciente. Somente se o atendimento não tiver sido iniciado.",
          "operationId" : "checkInCancel",
          "consumes" : [ "application/json" ],
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "in" : "header",
            "name" : "Authorization",
            "type" : "string",
            "required" : true
          }, {
            "in" : "body",
            "name" : "body",
            "description" : "Parâmetros para o cancelamento do checkin.",
            "required" : true,
            "schema" : {
              "type" : "object",
              "properties" : {
                "id" : {
                  "type" : "number",
                  "example" : 123,
                  "description" : "Id do voucher"
                }
              }
            }
          } ],
          "responses" : {
            "200" : {
              "description" : "requisição executada com sucesso.",
              "schema" : {
                "type" : "string",
                "example" : "Checkin cancelado"
              }
            },
            "403" : {
              "description" : "Dados inválidos"
            }
          }
        }
      },
      "/webhook-configurado" : {
        "post" : {
          "tags" : [ "webhook" ],
          "summary" : "Webhook disparado quando ocorre uma atualização no status da marcação.",
          "description" : "Essa não é uma rota da API, mas a descrição da requisição enviada quando uma atualização de status da agenda ocorre.",
          "consumes" : [ "application/json" ],
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "in" : "header",
            "name" : "X-APP-TOKEN",
            "type" : "string",
            "required" : true
          }, {
            "in" : "header",
            "name" : "X-DOMAIN",
            "type" : "string",
            "required" : true
          }, {
            "in" : "header",
            "name" : "X-EVENT",
            "type" : "string",
            "required" : true,
            "description" : "Possíveis Eventos: STATUS-MARCACAO, REMARCACAO, CHAMADA ou FIM-ATENDIMENTO"
          }, {
            "in" : "body",
            "name" : "body",
            "description" : "Informações da Atualização de Status. A informação {nova} é enviada quando o evento é de REMARCACAO.",
            "required" : true,
            "schema" : {
              "type" : "object",
              "properties" : {
                "id_marcacao" : {
                  "type" : "number",
                  "example" : 123,
                  "description" : "Id do marcação atualizada."
                },
                "status" : {
                  "type" : "string",
                  "example" : "C",
                  "description" : "Status atualizado: A - Aberto, B - Bloqueado ou C - Cancelado."
                },
                "motivo" : {
                  "type" : "string",
                  "example" : "Motivo do cancelamento."
                },
                "checkin" : {
                  "type" : "string",
                  "example" : "2020-01-01 10:00",
                  "description" : "Quando o paciente realiza o check-in na clínica, é enviado o status A, com a data/hora do check-in."
                },
                "evento" : {
                  "type" : "object",
                  "description" : "Evento de Chamada e Fim de Atendimento",
                  "properties" : {
                    "nome" : {
                      "type" : "string",
                      "example" : "chamada",
                      "description" : "Evento Especial: chamada e fim-atendimento"
                    },
                    "local" : {
                      "type" : "string",
                      "example" : "Consultório 10",
                      "description" : "Local da chamada. Específico para o evento chamada"
                    }
                  }
                },
                "nova" : {
                  "$ref" : "#/definitions/voucher"
                }
              }
            }
          } ],
          "responses" : {
            "200" : {
              "description" : "Chamada com sucesso."
            }
          }
        }
      },
      "/convenios" : {
        "get" : {
          "tags" : [ "cadastros" ],
          "summary" : "lista de convênios.",
          "description" : "Lista de convênios.",
          "operationId" : "getConvenios",
          "consumes" : [ "application/json" ],
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "in" : "header",
            "name" : "Authorization",
            "type" : "string",
            "required" : true
          } ],
          "responses" : {
            "200" : {
              "description" : "lista com sucesso.",
              "schema" : {
                "$ref" : "#/definitions/convenios"
              }
            },
            "405" : {
              "description" : "Invalid input"
            }
          }
        }
      }
    },
    "securityDefinitions" : {
      "petstore_auth" : {
        "type" : "oauth2",
        "authorizationUrl" : "http://petstore.swagger.io/oauth/dialog",
        "flow" : "implicit",
        "scopes" : {
          "write:pets" : "modify pets in your account",
          "read:pets" : "read your pets"
        }
      },
      "api_key" : {
        "type" : "apiKey",
        "name" : "api_key",
        "in" : "header"
      }
    },
    "definitions" : {
      "plano" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "id do plano",
            "example" : "01"
          },
          "nome" : {
            "type" : "string",
            "description" : "nome do plano",
            "example" : "Básico"
          },
          "codigo" : {
            "type" : "string",
            "description" : "código do plano",
            "example" : "123"
          }
        }
      },
      "addconvenio" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "id do convenio",
            "example" : "01"
          },
          "reg_ans" : {
            "type" : "string",
            "description" : "registro na ANS",
            "example" : "12345"
          },
          "matricula" : {
            "type" : "string",
            "description" : "matrícula no convênio",
            "example" : "12345"
          },
          "validade" : {
            "type" : "string",
            "description" : "validade da matrícula no formato yyyy-mm-dd",
            "example" : "1980-06-01"
          },
          "id_plano" : {
            "type" : "string",
            "description" : "Id do Plano",
            "example" : "01"
          }
        }
      },
      "convenio" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "id do convenio",
            "example" : "01"
          },
          "nome" : {
            "type" : "string",
            "description" : "nome do convenio",
            "example" : "UNIMED"
          },
          "reg_ans" : {
            "type" : "string",
            "description" : "registro na ANS",
            "example" : "12345"
          },
          "planos" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/plano"
            }
          }
        }
      },
      "convenios" : {
        "type" : "array",
        "items" : {
          "$ref" : "#/definitions/convenio"
        }
      },
      "sessao" : {
        "type" : "object",
        "properties" : {
          "access_token" : {
            "type" : "string",
            "description" : "Token de autenticação. Deve enviado nas demais requisições como Bearer Token",
            "example" : "ABCDE12345"
          },
          "token_type" : {
            "type" : "string",
            "description" : "bearer",
            "example" : "bearer"
          },
          "expires_in" : {
            "type" : "number",
            "description" : "Tempo para expiração do token.",
            "example" : 360000
          },
          "user" : {
            "type" : "object",
            "description" : "Dados do Paciente",
            "properties" : {
              "id" : {
                "type" : "number",
                "example" : 1,
                "description" : "Id do Paciente"
              },
              "nome" : {
                "type" : "string",
                "example" : "FULANO DA SILVA",
                "description" : "Nome do Paciente"
              },
              "id_paciente" : {
                "type" : "number",
                "example" : 1,
                "description" : "ID do cadastro definitivo do paciente."
              }
            }
          },
          "unidade" : {
            "type" : "object",
            "description" : "Dados da Unidade",
            "properties" : {
              "nome" : {
                "type" : "string",
                "example" : "Clinica Modelo",
                "description" : "Nome da Unidade Acessada"
              }
            }
          }
        }
      },
      "credencialLogin" : {
        "type" : "object",
        "properties" : {
          "login" : {
            "type" : "string",
            "description" : "Login do usuário de aplicação",
            "example" : "abcde"
          },
          "senha" : {
            "type" : "string",
            "description" : "Senha do usuário de aplicação",
            "example" : "3333"
          },
          "id" : {
            "type" : "number",
            "description" : "Id do paciente que será tratado na sessão.",
            "example" : 123
          }
        }
      },
      "docs" : {
        "type" : "object",
        "properties" : {
          "cpf" : {
            "type" : "string",
            "example" : "11111111111",
            "description" : "CPF do paciente."
          },
          "rg" : {
            "type" : "string",
            "example" : "2222222222",
            "description" : "RG do paciente."
          }
        }
      },
      "contatos" : {
        "type" : "object",
        "properties" : {
          "celular" : {
            "type" : "string",
            "example" : "11988884444"
          },
          "telefone" : {
            "type" : "string",
            "example" : "112345678"
          },
          "email" : {
            "type" : "string",
            "example" : "a@a.com.br"
          }
        }
      },
      "endereco" : {
        "type" : "object",
        "properties" : {
          "cep" : {
            "type" : "string"
          },
          "endereco" : {
            "type" : "string"
          },
          "numero" : {
            "type" : "string"
          },
          "complemento" : {
            "type" : "string"
          },
          "bairro" : {
            "type" : "string"
          },
          "cidade" : {
            "type" : "string",
            "example" : "São Paulo"
          },
          "uf" : {
            "type" : "string",
            "example" : "SP"
          }
        }
      },
      "paciente" : {
        "type" : "object",
        "properties" : {
          "id_origem" : {
            "type" : "integer",
            "description" : "Id do paciente no sistema de origem.",
            "example" : "1234"
          },
          "nome" : {
            "type" : "string",
            "description" : "Nome do Paciente",
            "example" : "João da Silva"
          },
          "sexo" : {
            "type" : "string",
            "enum" : [ "M", "F" ]
          },
          "dt_nasc" : {
            "type" : "string",
            "description" : "yyyy-mm-dd",
            "example" : "1980-06-01"
          },
          "mae" : {
            "type" : "string",
            "description" : "Nome da Mãe",
            "example" : "Maria das Graças"
          },
          "docs" : {
            "$ref" : "#/definitions/docs"
          },
          "contatos" : {
            "$ref" : "#/definitions/contatos"
          },
          "endereco" : {
            "$ref" : "#/definitions/endereco"
          },
          "convenio" : {
            "$ref" : "#/definitions/addconvenio"
          }
        }
      },
      "profissional" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "Id do Profissional"
          },
          "tratamento" : {
            "type" : "string",
            "description" : "Tratamento",
            "example" : "Dr(a)."
          },
          "numero" : {
            "type" : "string",
            "description" : "Número no Conselho",
            "example" : "1234"
          },
          "uf" : {
            "type" : "string",
            "description" : "UF do Conselho do Médico",
            "example" : "SP"
          },
          "nome" : {
            "type" : "string",
            "description" : "Nome do Profissional",
            "example" : "Fulano da Silva"
          },
          "selecionado" : {
            "type" : "boolean",
            "example" : false
          }
        }
      },
      "unidade" : {
        "type" : "object",
        "properties" : {
          "nome" : {
            "type" : "string"
          },
          "cep" : {
            "type" : "string"
          },
          "cnes" : {
            "type" : "string"
          },
          "local" : {
            "type" : "string"
          }
        }
      },
      "horarioMarcar" : {
        "type" : "object",
        "properties" : {
          "procedimento" : {
            "type" : "string",
            "description" : "Código do Procedimento",
            "example" : "1000"
          },
          "id" : {
            "type" : "string",
            "description" : "Id do horário a ser marcado"
          },
          "plano" : {
            "type" : "number",
            "description" : "Id do plano sendo marcado.",
            "example" : 1
          },
          "email" : {
            "type" : "boolean",
            "description" : "Indica se o e-mail será enviado ao paciente ao realizar a marcação.",
            "example" : true
          },
          "revisao" : {
            "type" : "boolean",
            "description" : "Para para indicar se a consulta deve ser marcada como revisão. Se não for passado o parâmetro como true, será marcado de acordo com o cálculo do sistema.",
            "example" : false
          },
          "ordem_chegada" : {
            "type" : "boolean",
            "description" : "Quando o horário consultado for de ordem de chegada, deve-se enviar esse parâmetro como true, para realizar a marcação",
            "example" : false
          },
          "lista" : {
            "type" : "array",
            "description" : "Id dos procedimentos associados, para realização no mesmo horário (ex.: Procedimentos laboratoriais).",
            "items" : {
              "type" : "number",
              "example" : 123,
              "description" : "Id do procedimento associado."
            }
          },
          "solicitante" : {
            "$ref" : "#/definitions/solicitante"
          },
          "confirmado" : {
            "type" : "string",
            "description" : "Se for passado um texto, a marcação já irá ser feita como confirmada."
          }
        }
      },
      "procedimento" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "descr" : {
            "type" : "string"
          },
          "abrev" : {
            "type" : "string"
          },
          "tuss" : {
            "type" : "string"
          },
          "sus" : {
            "type" : "string"
          },
          "especialidade" : {
            "$ref" : "#/definitions/especialidade"
          }
        }
      },
      "voucher" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "Id do Voucher",
            "example" : 123
          },
          "status" : {
            "type" : "string",
            "description" : "Status do Voucher.",
            "enum" : [ "agendado", "atendido", "checkin" ]
          },
          "tipo" : {
            "type" : "string",
            "description" : "Tipo de Voucher.",
            "enum" : [ "A" ]
          },
          "data" : {
            "type" : "string",
            "example" : "2019-01-01"
          },
          "hora" : {
            "type" : "string",
            "example" : "09:00"
          },
          "solicitante" : {
            "$ref" : "#/definitions/profissional"
          },
          "realizador" : {
            "$ref" : "#/definitions/profissional"
          },
          "unidade" : {
            "$ref" : "#/definitions/unidade"
          },
          "procedimento" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/procedimento"
            }
          },
          "especialidade" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/especialidade"
            }
          }
        }
      },
      "horariosAgenda" : {
        "type" : "object",
        "properties" : {
          "procedimento" : {
            "type" : "string",
            "example" : "CONS"
          },
          "horarios" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "properties" : {
                "id" : {
                  "type" : "string",
                  "description" : "Id da Data."
                },
                "data" : {
                  "type" : "string",
                  "description" : "data do horário disponível.",
                  "example" : "2019-01-01"
                },
                "procedimento" : {
                  "type" : "string",
                  "description" : "procedimento para o qual o horário está disponível",
                  "example" : "CONS"
                },
                "ordem_chegada" : {
                  "type" : "boolean",
                  "example" : false,
                  "description" : "Indica se a agenda é por ordem de chegada."
                },
                "faixa_ordem_chegada" : {
                  "type" : "string",
                  "description" : "Preenchido quando é agenda por ordem de chegada."
                },
                "horarios" : {
                  "type" : "object",
                  "description" : "Lista de Horários com ID e horário."
                },
                "profissional" : {
                  "$ref" : "#/definitions/profissional"
                },
                "unidade" : {
                  "$ref" : "#/definitions/unidade"
                }
              }
            }
          }
        }
      },
      "especialidade" : {
        "type" : "object",
        "properties" : {
          "codigo" : {
            "type" : "string",
            "example" : "OFT"
          },
          "nome" : {
            "type" : "string",
            "example" : "OFTALMOLOGIA"
          },
          "cbos" : {
            "type" : "string",
            "example" : "225265"
          }
        }
      },
      "requisicao" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "number",
            "example" : 123
          },
          "origem" : {
            "type" : "string",
            "example" : "origem"
          },
          "tipo" : {
            "type" : "string",
            "example" : "requisicao"
          },
          "paciente" : {
            "type" : "string",
            "example" : "FULANO DA SILVA"
          },
          "data" : {
            "type" : "string",
            "example" : "01/01/2000"
          },
          "medico" : {
            "$ref" : "#/definitions/solicitante"
          },
          "items" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/procedimento"
            }
          }
        }
      },
      "solicitante" : {
        "type" : "object",
        "properties" : {
          "conselho" : {
            "type" : "string",
            "example" : "CRM"
          },
          "uf" : {
            "type" : "string",
            "example" : "BA"
          },
          "numero" : {
            "type" : "number",
            "example" : 1234
          },
          "nome" : {
            "type" : "string",
            "example" : "João da Silva"
          },
          "cbos" : {
            "type" : "string",
            "example" : "225265"
          }
        }
      },
      "reserva" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "number",
            "example" : "123"
          },
          "expira" : {
            "type" : "string",
            "example" : "2020-01-01 14:10",
            "description" : "Data/Hora da expiração da reserva."
          },
          "data" : {
            "type" : "string",
            "example" : "2020-01-01"
          },
          "hora" : {
            "type" : "string",
            "example" : "10:00"
          },
          "profissional" : {
            "$ref" : "#/definitions/profissional"
          },
          "instrucao" : {
            "type" : "object",
            "properties" : {
              "procedimento" : {
                "type" : "string",
                "example" : "instrução do procedimento"
              },
              "profissional" : {
                "type" : "string",
                "example" : "instrução do profissional"
              }
            }
          }
        }
      },
      "checkinrealizado" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "example" : "Check-in Realizado",
              "description" : "Mensagem de Retorno"
            }
          },
          "id_marcacao" : {
            "type" : "number",
            "example" : 1234,
            "description" : "Id da marcação"
          },
          "preferencial" : {
            "type" : "boolean",
            "example" : false
          },
          "expresso" : {
            "type" : "string",
            "example" : "Check-in Expresso. Dirija-se ao consultório X.",
            "description" : "Mensagem para o paciente, no caso de check-in expresso."
          },
          "local" : {
            "type" : "string",
            "example" : "consultório X",
            "description" : "Local de encaminhamento em caso de check-in expresso."
          },
          "recepcao" : {
            "type" : "string",
            "example" : "Recepção Principal",
            "description" : "Recepção na qual o paciente fez o check-in. Exibir para o paciente, no caso de check-in não expresso."
          }
        }
      }
    },
    "externalDocs" : {
      "description" : "Find out more about Swagger",
      "url" : "http://swagger.io"
    },
    "host" : "virtserver.swaggerhub.com",
    "basePath" : "/agsx30/klingo-api-externa/1.0.0"
  }